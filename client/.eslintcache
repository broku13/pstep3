[{"C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\index.js":"1","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\App.js":"2","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\login.js":"3","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\navbar.js":"4","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\welcome.js":"5","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\createaccount.js":"6","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\home.js":"7","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\products.js":"8","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\customers.js":"9","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\orders.js":"10","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\categories.js":"11"},{"size":312,"mtime":1612338202538,"results":"12","hashOfConfig":"13"},{"size":651,"mtime":1614315520687,"results":"14","hashOfConfig":"13"},{"size":830,"mtime":1612526658151,"results":"15","hashOfConfig":"13"},{"size":1557,"mtime":1612824853164,"results":"16","hashOfConfig":"13"},{"size":533,"mtime":1612835116995,"results":"17","hashOfConfig":"13"},{"size":1030,"mtime":1612835195340,"results":"18","hashOfConfig":"13"},{"size":199,"mtime":1612825046751,"results":"19","hashOfConfig":"13"},{"size":3988,"mtime":1614320569516,"results":"20","hashOfConfig":"13"},{"size":4399,"mtime":1614321070796,"results":"21","hashOfConfig":"13"},{"size":3284,"mtime":1612826074805,"results":"22","hashOfConfig":"13"},{"size":2880,"mtime":1612824811504,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qpdrnl",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\index.js",[],["55","56"],"C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\App.js",["57","58","59","60"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport NavBar from './navbar';\nimport Login from './login';\nimport Welcome from './welcome';\nimport CreateAccount from './createaccount';\nimport {Link, NavLink, Switch, Route } from 'react-router-dom';\nimport Axios from 'axios';\n\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/'>\n        <Welcome/>\n      </Route>\n      <Route path='/login'>\n        <Login/>\n      </Route>\n      <Route path='/createaccount'>\n        <CreateAccount/>\n      </Route>\n      <Route path='/home'>\n        <NavBar/>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\login.js",["61","62","63"],"import React from 'react';\r\nimport {Link, NavLink, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction Login(){\r\n    return(\r\n        <div>\r\n            <form>\r\n                <label>\r\n                    Username\r\n                    <input\r\n                    type=\"text\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Password\r\n                    <input\r\n                    type=\"text\"\r\n                    />\r\n                </label>\r\n                <Link to=\"/home\">\r\n                    <button type=\"button\">\r\n                        Log in\r\n                    </button>\r\n                </Link>\r\n                {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\navbar.js",[],"C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\welcome.js",["64","65","66"],"import React from 'react';\r\nimport {Link, NavLink, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction Welcome(){\r\n    return(\r\n        <div>\r\n            <Link to=\"/login\">\r\n                    <button type=\"button\">\r\n                        Log in\r\n                    </button>\r\n            </Link>\r\n            <Link to=\"/createaccount\">\r\n                    <button type=\"button\">\r\n                        Create Account\r\n                    </button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Welcome","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\createaccount.js",["67","68","69"],"import React from 'react';\r\nimport {Link, NavLink, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction CreateAccount(){\r\n    return(\r\n        <div>\r\n            <form>\r\n                <label>\r\n                    Username\r\n                    <input\r\n                    type=\"text\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Password\r\n                    <input\r\n                    type=\"text\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Re-Enter Password\r\n                    <input\r\n                    type=\"text\"\r\n                    />\r\n                </label>\r\n                <Link to=\"/login\">\r\n                    <button type=\"button\">\r\n                        Create Account\r\n                    </button>\r\n                </Link>\r\n                {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateAccount;","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\home.js",[],"C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\products.js",["70","71","72","73","74"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction Products(){\r\n\r\n    const [productList, setProductList] = useState([]);\r\n    const getProducts = () =>{\r\n        Axios.get(\"http://localhost:3001/products\").then((response) => {\r\n            setProductList(response.data);\r\n        })\r\n    }\r\n\r\n        const data = React.useMemo(() =>\r\n        productList,\r\n        [productList]\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Product Info',\r\n                    columns: [\r\n                        {\r\n                            Header: 'ProductID',\r\n                            accessor: 'productID'\r\n                        },\r\n                        {   \r\n                            Header: 'Name',\r\n                            accessor: 'productName',\r\n                        },\r\n                        {\r\n                            Header: 'Price',\r\n                            accessor: 'productPrice',\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new product</p>\r\n                <form>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Price\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <p>Search product</p>\r\n                <form>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Search\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                        <button onClick={getProducts}>Show</button>\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            <td><button>Update</button></td>\r\n                            <td><button>Delete</button></td>\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Products","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\customers.js",["75","76","77","78","79"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\nimport { useState } from 'react';\r\nimport Axios from 'axios';\r\n\r\n\r\n\r\nfunction Customers(){\r\n    const [customerList, setCustomerList] = useState([]);\r\n    const getCustomers = () =>{\r\n        Axios.get(\"http://localhost:3001/customers\").then((response) => {\r\n            setCustomerList(response.data);\r\n        })\r\n    }\r\n        const data = React.useMemo(() =>\r\n        customerList,\r\n        [customerList]\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Customer Info',\r\n                    columns: [\r\n                        {\r\n                            Header: 'CustomerID',\r\n                            accessor: 'customerID'\r\n                        },\r\n                        {   \r\n                            Header: 'First Name',\r\n                            accessor: 'firstName',\r\n                        },\r\n                        {\r\n                            Header: 'Last Name',\r\n                            accessor: 'lastName',\r\n                        },\r\n                        {\r\n                            Header: 'Age',\r\n                            accessor: 'age'\r\n                        },\r\n                        {\r\n                            Header: 'Credit',\r\n                            accessor: 'credit'\r\n                        },\r\n                        {\r\n                            Header: 'Address ID',\r\n                            accessor: 'addressID'\r\n                        }\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new customer</p>\r\n                <form>\r\n                    <label>\r\n                        First Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Last Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label><label>\r\n                        Age\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Credit\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Address\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                        <button onClick={getCustomers}>Show</button>\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Customers","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\orders.js",["80","81","82","83","84"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\n\r\n\r\nfunction Orders(){\r\n        const data = React.useMemo(() =>\r\n        [\r\n        {\r\n            orderID: 1,\r\n            productID: 2,\r\n            customerID: 1,\r\n        },\r\n        {\r\n            orderID: 2,\r\n            productID: 1,\r\n            customerID: 2,\r\n        },\r\n        ],\r\n        []\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Orders Info',\r\n                    columns: [\r\n                        {   \r\n                            Header: 'OrderID',\r\n                            accessor: 'orderID',\r\n                        },\r\n                        {\r\n                            Header: 'ProductID',\r\n                            accessor: 'productID',\r\n                        },\r\n                        {\r\n                            Header: 'CustomerID',\r\n                            accessor: 'customerID'\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new order</p>\r\n                <form>\r\n                    <label>\r\n                        ProductID\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        CustomerID\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            <td><button>Delete</button></td>\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Orders","C:\\Users\\prana\\Documents\\Databases\\pstep3\\client\\src\\categories.js",["85","86","87","88","89"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\n\r\n\r\nfunction Categories(){\r\n        const data = React.useMemo(() =>\r\n        [\r\n        {\r\n            categoryID: 1,\r\n            category_name: 'Laptop',\r\n        },\r\n        {\r\n            categoryID: 2,\r\n            category_name: 'Smartphone',\r\n        },\r\n        ],\r\n        []\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Category Info',\r\n                    columns: [\r\n                        {   \r\n                            Header: 'Category ID',\r\n                            accessor: 'categoryID',\r\n                        },\r\n                        {\r\n                            Header: 'Category Name',\r\n                            accessor: 'category_name',\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new category</p>\r\n                <form>\r\n                    <label>\r\n                        Category Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Categories",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":1,"column":8,"nodeType":"96","messageId":"97","endLine":1,"endColumn":12},{"ruleId":"94","severity":1,"message":"98","line":8,"column":9,"nodeType":"96","messageId":"97","endLine":8,"endColumn":13},{"ruleId":"94","severity":1,"message":"99","line":8,"column":15,"nodeType":"96","messageId":"97","endLine":8,"endColumn":22},{"ruleId":"94","severity":1,"message":"100","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":13},{"ruleId":"94","severity":1,"message":"99","line":2,"column":15,"nodeType":"96","messageId":"97","endLine":2,"endColumn":22},{"ruleId":"94","severity":1,"message":"101","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":30},{"ruleId":"94","severity":1,"message":"102","line":2,"column":32,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"99","line":2,"column":15,"nodeType":"96","messageId":"97","endLine":2,"endColumn":22},{"ruleId":"94","severity":1,"message":"101","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":30},{"ruleId":"94","severity":1,"message":"102","line":2,"column":32,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"99","line":2,"column":15,"nodeType":"96","messageId":"97","endLine":2,"endColumn":22},{"ruleId":"94","severity":1,"message":"101","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":30},{"ruleId":"94","severity":1,"message":"102","line":2,"column":32,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"98","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"99","line":2,"column":15,"nodeType":"96","messageId":"97","endLine":2,"endColumn":22},{"ruleId":"94","severity":1,"message":"103","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"102","line":2,"column":39,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"94","severity":1,"message":"101","line":2,"column":46,"nodeType":"96","messageId":"97","endLine":2,"endColumn":52},{"ruleId":"94","severity":1,"message":"98","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"99","line":2,"column":15,"nodeType":"96","messageId":"97","endLine":2,"endColumn":22},{"ruleId":"94","severity":1,"message":"103","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"102","line":2,"column":39,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"94","severity":1,"message":"101","line":2,"column":46,"nodeType":"96","messageId":"97","endLine":2,"endColumn":52},{"ruleId":"94","severity":1,"message":"98","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"99","line":2,"column":15,"nodeType":"96","messageId":"97","endLine":2,"endColumn":22},{"ruleId":"94","severity":1,"message":"103","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"102","line":2,"column":39,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"94","severity":1,"message":"101","line":2,"column":46,"nodeType":"96","messageId":"97","endLine":2,"endColumn":52},{"ruleId":"94","severity":1,"message":"98","line":2,"column":9,"nodeType":"96","messageId":"97","endLine":2,"endColumn":13},{"ruleId":"94","severity":1,"message":"99","line":2,"column":15,"nodeType":"96","messageId":"97","endLine":2,"endColumn":22},{"ruleId":"94","severity":1,"message":"103","line":2,"column":24,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"102","line":2,"column":39,"nodeType":"96","messageId":"97","endLine":2,"endColumn":44},{"ruleId":"94","severity":1,"message":"101","line":2,"column":46,"nodeType":"96","messageId":"97","endLine":2,"endColumn":52},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavLink' is defined but never used.","'Axios' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","no-global-assign","no-unsafe-negation"]