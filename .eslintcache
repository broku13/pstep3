[{"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\index.js":"1","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\App.js":"2","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\reportWebVitals.js":"3","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\navbar.js":"4","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\home.js":"5","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\login.js":"6","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\products.js":"7","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\customers.js":"8","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\orders.js":"9","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\categories.js":"10","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\welcome.js":"11","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\createaccount.js":"12"},{"size":312,"mtime":1612338202538,"results":"13","hashOfConfig":"14"},{"size":624,"mtime":1612835243419,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1557,"mtime":1612824853164,"results":"17","hashOfConfig":"14"},{"size":199,"mtime":1612825046751,"results":"18","hashOfConfig":"14"},{"size":830,"mtime":1612526658151,"results":"19","hashOfConfig":"14"},{"size":3827,"mtime":1612831707334,"results":"20","hashOfConfig":"14"},{"size":4465,"mtime":1612824889412,"results":"21","hashOfConfig":"14"},{"size":3284,"mtime":1612826074805,"results":"22","hashOfConfig":"14"},{"size":2880,"mtime":1612824811504,"results":"23","hashOfConfig":"14"},{"size":533,"mtime":1612835116995,"results":"24","hashOfConfig":"14"},{"size":1030,"mtime":1612835195340,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"n018hm",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\index.js",[],["57","58"],"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\App.js",["59","60","61"],"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\reportWebVitals.js",[],["62","63"],"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\navbar.js",[],"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\home.js",[],"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\login.js",["64","65","66"],"import React from 'react';\r\nimport {Link, NavLink, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nfunction Login(){\r\n    return(\r\n        <div>\r\n            <form>\r\n                <label>\r\n                    Username\r\n                    <input\r\n                    type=\"text\"\r\n                    />\r\n                </label>\r\n                <label>\r\n                    Password\r\n                    <input\r\n                    type=\"text\"\r\n                    />\r\n                </label>\r\n                <Link to=\"/home\">\r\n                    <button type=\"button\">\r\n                        Log in\r\n                    </button>\r\n                </Link>\r\n                {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\products.js",["67","68","69","70","71"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\n\r\n\r\nfunction Products(){\r\n        const data = React.useMemo(() =>\r\n        [\r\n        {\r\n            productID: 1,\r\n            name: 'Lenovo Ideapad 720s',\r\n            price: 1100,\r\n        },\r\n        {\r\n            productID: 2,\r\n            name: 'iPhone 12',\r\n            price: 800,\r\n        },\r\n        ],\r\n        []\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Product Info',\r\n                    columns: [\r\n                        {\r\n                            Header: 'ProductID',\r\n                            accessor: 'productID'\r\n                        },\r\n                        {   \r\n                            Header: 'Name',\r\n                            accessor: 'name',\r\n                        },\r\n                        {\r\n                            Header: 'Price',\r\n                            accessor: 'price',\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new product</p>\r\n                <form>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Price\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <p>Search product</p>\r\n                <form>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Search\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            <td><button>Update</button></td>\r\n                            <td><button>Delete</button></td>\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Products","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\customers.js",["72","73","74","75","76"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\n\r\n\r\n\r\nfunction Customers(){\r\n        const data = React.useMemo(() =>\r\n        [\r\n        {\r\n            customerID: 1,\r\n            first_name: 'Pranav',\r\n            second_name: 'Simha',\r\n            age: 21,\r\n            credit: 'xxxxxxxxxxxxxx',\r\n            address: 'abc 1st street'\r\n        },\r\n        {\r\n            customerID: 2,\r\n            first_name: 'Sahil',\r\n            second_name: 'Jahni',\r\n            age: 21,\r\n            credit: 'xxxxxxxxxxxxxx',\r\n            address: 'abc 2nd street'\r\n        },\r\n        ],\r\n        []\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Customer Info',\r\n                    columns: [\r\n                        {\r\n                            Header: 'CustomerID',\r\n                            accessor: 'customerID'\r\n                        },\r\n                        {   \r\n                            Header: 'First Name',\r\n                            accessor: 'first_name',\r\n                        },\r\n                        {\r\n                            Header: 'Second Name',\r\n                            accessor: 'second_name',\r\n                        },\r\n                        {\r\n                            Header: 'Age',\r\n                            accessor: 'age'\r\n                        },\r\n                        {\r\n                            Header: 'Credit',\r\n                            accessor: 'credit'\r\n                        },\r\n                        {\r\n                            Header: 'Address',\r\n                            accessor: 'address'\r\n                        }\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new customer</p>\r\n                <form>\r\n                    <label>\r\n                        First Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Last Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label><label>\r\n                        Age\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Credit\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Address\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Customers","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\orders.js",["77","78","79","80","81"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\n\r\n\r\nfunction Orders(){\r\n        const data = React.useMemo(() =>\r\n        [\r\n        {\r\n            orderID: 1,\r\n            productID: 2,\r\n            customerID: 1,\r\n        },\r\n        {\r\n            orderID: 2,\r\n            productID: 1,\r\n            customerID: 2,\r\n        },\r\n        ],\r\n        []\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Orders Info',\r\n                    columns: [\r\n                        {   \r\n                            Header: 'OrderID',\r\n                            accessor: 'orderID',\r\n                        },\r\n                        {\r\n                            Header: 'ProductID',\r\n                            accessor: 'productID',\r\n                        },\r\n                        {\r\n                            Header: 'CustomerID',\r\n                            accessor: 'customerID'\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new order</p>\r\n                <form>\r\n                    <label>\r\n                        ProductID\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        CustomerID\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            <td><button>Delete</button></td>\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Orders","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\categories.js",["82","83","84","85","86"],"import React from 'react';\r\nimport {Link, NavLink, useRouteMatch, Route, Switch} from 'react-router-dom';\r\nimport { useTable } from 'react-table';\r\n\r\n\r\nfunction Categories(){\r\n        const data = React.useMemo(() =>\r\n        [\r\n        {\r\n            categoryID: 1,\r\n            category_name: 'Laptop',\r\n        },\r\n        {\r\n            categoryID: 2,\r\n            category_name: 'Smartphone',\r\n        },\r\n        ],\r\n        []\r\n        );\r\n\r\n\r\n        const columns = React.useMemo(\r\n            () => [\r\n                {\r\n                    Header: 'Category Info',\r\n                    columns: [\r\n                        {   \r\n                            Header: 'Category ID',\r\n                            accessor: 'categoryID',\r\n                        },\r\n                        {\r\n                            Header: 'Category Name',\r\n                            accessor: 'category_name',\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            []\r\n           );\r\n        \r\n           const {\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n           } = useTable({ columns, data })\r\n        \r\n        return(\r\n            <div>\r\n                <p>Enter new category</p>\r\n                <form>\r\n                    <label>\r\n                        Category Name\r\n                        <input\r\n                        type=\"text\"\r\n                        />\r\n                    </label>\r\n                    <button type=\"button\">\r\n                        Enter\r\n                    </button>\r\n                    {/* {this.state.error && <p>You need to have both a url and a caption</p>} */}\r\n                </form>\r\n                <table {...getTableProps()}>\r\n                    <thead>\r\n                        {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                        ))}\r\n                    </thead>\r\n                    <tbody {...getTableBodyProps()}>\r\n                        {rows.map(row => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                            {row.cells.map(cell => {\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                            </tr>\r\n                        )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Categories","C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\welcome.js",["87","88","89"],"C:\\Users\\prana\\Documents\\Databases\\final_project\\src\\createaccount.js",["90","91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":8,"column":9,"nodeType":"99","messageId":"100","endLine":8,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":8,"column":15,"nodeType":"99","messageId":"100","endLine":8,"endColumn":22},{"ruleId":"93","replacedBy":"103"},{"ruleId":"95","replacedBy":"104"},{"ruleId":"97","severity":1,"message":"102","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"105","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":30},{"ruleId":"97","severity":1,"message":"106","line":2,"column":32,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"101","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"107","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"106","line":2,"column":39,"nodeType":"99","messageId":"100","endLine":2,"endColumn":44},{"ruleId":"97","severity":1,"message":"105","line":2,"column":46,"nodeType":"99","messageId":"100","endLine":2,"endColumn":52},{"ruleId":"97","severity":1,"message":"101","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"107","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"106","line":2,"column":39,"nodeType":"99","messageId":"100","endLine":2,"endColumn":44},{"ruleId":"97","severity":1,"message":"105","line":2,"column":46,"nodeType":"99","messageId":"100","endLine":2,"endColumn":52},{"ruleId":"97","severity":1,"message":"101","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"107","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"106","line":2,"column":39,"nodeType":"99","messageId":"100","endLine":2,"endColumn":44},{"ruleId":"97","severity":1,"message":"105","line":2,"column":46,"nodeType":"99","messageId":"100","endLine":2,"endColumn":52},{"ruleId":"97","severity":1,"message":"101","line":2,"column":9,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"102","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"107","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"106","line":2,"column":39,"nodeType":"99","messageId":"100","endLine":2,"endColumn":44},{"ruleId":"97","severity":1,"message":"105","line":2,"column":46,"nodeType":"99","messageId":"100","endLine":2,"endColumn":52},{"ruleId":"97","severity":1,"message":"102","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"105","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":30},{"ruleId":"97","severity":1,"message":"106","line":2,"column":32,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},{"ruleId":"97","severity":1,"message":"102","line":2,"column":15,"nodeType":"99","messageId":"100","endLine":2,"endColumn":22},{"ruleId":"97","severity":1,"message":"105","line":2,"column":24,"nodeType":"99","messageId":"100","endLine":2,"endColumn":30},{"ruleId":"97","severity":1,"message":"106","line":2,"column":32,"nodeType":"99","messageId":"100","endLine":2,"endColumn":37},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavLink' is defined but never used.",["108"],["109"],"'Switch' is defined but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","no-global-assign","no-unsafe-negation"]